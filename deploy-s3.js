const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando deploy para S3...');

try {
  // 1. Build do projeto
  console.log('üì¶ Fazendo build do projeto...');
  execSync('npm run build', { stdio: 'inherit' });

  // 2. Verificar se a pasta out foi criada
  const outDir = path.join(__dirname, 'out');
  if (!fs.existsSync(outDir)) {
    throw new Error('Pasta out n√£o foi criada. Verifique se o build foi executado corretamente.');
  }

  console.log('‚úÖ Build conclu√≠do com sucesso!');
  console.log('üìÅ Arquivos est√°ticos gerados na pasta out/');
  console.log('');
  console.log('üìã Pr√≥ximos passos para deploy no S3:');
  console.log('');
  console.log('1. Crie um bucket S3 para hospedar o site');
  console.log('2. Configure o bucket para hospedagem de site est√°tico:');
  console.log('   - V√° em Properties > Static website hosting');
  console.log('   - Enable static website hosting');
  console.log('   - Index document: index.html');
  console.log('   - Error document: 404.html');
  console.log('');
  console.log('3. Fa√ßa upload dos arquivos da pasta out/ para o bucket');
  console.log('');
  console.log('4. Configure as permiss√µes do bucket:');
  console.log('   - V√° em Permissions > Bucket policy');
  console.log('   - Adicione uma pol√≠tica que permita acesso p√∫blico de leitura');
  console.log('');
  console.log('5. Configure um dom√≠nio personalizado (opcional):');
  console.log('   - Use Route 53 para configurar DNS');
  console.log('   - Configure CloudFront para CDN (recomendado)');
  console.log('');
  console.log('üîó URL do site ser√°: http://[nome-do-bucket].s3-website-[regi√£o].amazonaws.com');
  console.log('');
  console.log('üí° Dica: Use o AWS CLI para automatizar o upload:');
  console.log('   aws s3 sync out/ s3://[nome-do-bucket] --delete');

} catch (error) {
  console.error('‚ùå Erro durante o build:', error.message);
  process.exit(1);
} 